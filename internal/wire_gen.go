// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"gorm.io/driver/mysql"
	"gorm.io/gorm"
	"googlewire/internal/controllers"
	"googlewire/internal/models"
	"googlewire/internal/repositories"
	"googlewire/internal/services"
)

// Injectors from wire.go:

// InitializeUserController initializes the UserController and its dependencies.
func InitializeUserController() (*controllers.UserController, error) {
	db, err := NewDatabaseConnection()
	if err != nil {
		return nil, err
	}
	userRepository := repositories.NewUserRepository(db)
	userService := services.NewUserService(userRepository)
	userController := controllers.NewUserController(userService)
	return userController, nil
}

// wire.go:

// NewDatabaseConnection creates a new GORM database connection and performs auto-migration.
func NewDatabaseConnection() (*gorm.DB, error) {
	dsn := "root:password@tcp(db:3306)/first?charset=utf8mb4&parseTime=True&loc=Local"
	db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{})
	if err != nil {
		return nil, err
	}

	if err := db.AutoMigrate(&models.User{}); err != nil {
		return nil, err
	}

	return db, nil
}
